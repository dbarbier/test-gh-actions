name: Build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        cfg:
          #- {os: macos-latest, doc: 1}
          #- {os: ubuntu-latest, doc: 1}
          - {os: windows-latest, doc: 1}
    runs-on: ${{ matrix.cfg.os }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Install Python
        if: matrix.cfg.doc == 1
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Restore MikTeX cache (Windows)
        id: cache-miktex-windows
        if: startsWith(matrix.cfg.os, 'windows') && matrix.cfg.doc == 1
        uses: actions/cache@v2
        with:
          path: |
            ~/AppData/Local/Programs/MiKTeX
            ~/AppData/Roaming/MiKTeX
          key: miktex-cache-${{ hashFiles('scripts/windows-install-miktex.ps1', 'scripts/tex-packages.txt')Â }}

      - name: Install MikTeX (Windows)
        if: steps.cache-miktex-windows.outputs.cache-hit != 'true'
        shell: pwsh
        run: scripts\windows-install-miktex.ps1

      - name: Add MikTeX to PATH (Windows)
        # echo "C:/Program Files/MiKTeX/miktex/bin/x64/" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        run: |
          echo $env:LOCALAPPDATA"/Programs/MiKTeX/miktex/bin/x64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Setup MikTeX (Windows)
        if: steps.cache-miktex-windows.outputs.cache-hit != 'true'
        run: |
          # These 3 calls are needed: https://github.com/MiKTeX/miktex/issues/716
          mpm --update
          mpm --install=@scripts\tex-packages.txt --verbose
          initexmf --verbose --set-config-value='[MPM]AutoInstall=0'
          initexmf --verbose --update-fndb
          initexmf --verbose --dump=pdflatex
          Get-Content -Path $env:LOCALAPPDATA"\MikTeX\2.9\miktex\log\initexmf.log"
          initexmf --verbose --mkmaps --mklinks
          initexmf --verbose --update-fndb

      - name: Install dependencies for documentation (Windows)
        if: startsWith(matrix.cfg.os, 'windows') && matrix.cfg.doc == 1
        shell: pwsh
        run: |
          choco install -y --no-progress graphviz.portable
          # Update PATH
          echo "C:/Program Files/doxygen/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build doc
        if: startsWith(matrix.cfg.os, 'windows') && matrix.cfg.doc == 1
        shell: pwsh
        run: |
          pdflatex foo.tex
          Get-Content -Path $env:LOCALAPPDATA"\MikTeX\2.9\miktex\log\pdflatex.log"
          Get-Content -Path $env:LOCALAPPDATA"\MiKTeX\2.9\miktex\log\initexmf.log"
