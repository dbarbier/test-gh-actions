name: Build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        cfg:
          #- {os: macos-latest, doc: 1}
          #- {os: ubuntu-latest, doc: 1}
          - {os: windows-latest, doc: 1}
    runs-on: ${{ matrix.cfg.os }}

    steps:
    - name: Download MikTex (Windows)
      run: |
        $wc = New-Object System.Net.WebClient;
        $maxAttempts=5;
        $attemptCount=0;
        Do {
          $attemptCount++;
          Try {
            $wc.DownloadFile("https://miktex.org/download/win/miktexsetup-x64.zip", "miktexsetup-x64.zip")
          } Catch [Exception] {
            Write-Host $_.Exception | format-list -force
          }
        } while (((Test-Path "miktexsetup-x64.zip") -eq $false) -and ($attemptCount -le $maxAttempts))
      shell: pwsh
      if: matrix.cfg.os == 'windows-latest'

    - name: Extract MikTex zip (Windows)
      run: 7z e miktexsetup-x64.zip
      if: matrix.cfg.os == 'windows-latest'

    - name: Download MikTex packages (Windows)
      run: |
        .\miktexsetup_standalone.exe --verbose --local-package-repository=C:\miktex-repository --remote-package-repository="https://ctan.math.illinois.edu/systems/win32/miktex/tm/packages/" --package-set=essential download
      if: matrix.cfg.os == 'windows-latest'

    - name: Install MikTex packages (Windows)
      run: |
        .\miktexsetup_standalone.exe --local-package-repository=C:\miktex-repository `
                      --package-set=essential `
                      --shared `
                      install
      if: matrix.cfg.os == 'windows-latest'

    - name: Setting MikTex paths (Windows)
      shell: bash
      run: |
        echo "C:/Program Files/MiKTeX/miktex/bin/x64/" >> $GITHUB_PATH
        export PATH="/c/Program Files/MiKTeX/miktex/bin/x64/:$PATH"

        echo "Configuring MiKTeX to install missing packages on the fly"
        initexmf --admin --verbose --set-config-value='[MPM]AutoInstall=1'
      if: matrix.cfg.os == 'windows-latest'
