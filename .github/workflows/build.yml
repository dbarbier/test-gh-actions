name: Build

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        cfg:
          #- {os: macos-latest, doc: 1}
          #- {os: ubuntu-latest, doc: 1}
          - {os: windows-latest, doc: 1}
    runs-on: ${{ matrix.cfg.os }}

    steps:
      - name: Print env
        shell: bash
        run: |
          echo "Event: ${{github.event_name}} on ${{github.sha}}"
          env | grep GITHUB_ | sort

      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Install Python
        if: matrix.cfg.doc == 1
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install tinytex
        if: matrix.cfg.doc == 1
        uses: r-lib/actions/setup-tinytex@v1

      - name: Install required LaTeX packages (Windows)
        if: startsWith(matrix.cfg.os, 'windows') && matrix.cfg.doc == 1
        run: |
          tlmgr install (Get-Content .\scripts\tex-packages.txt | where { $_ -notmatch "(^\s*#)|(^\s*$)" })

      - name: Install required LaTeX packages (Unix)
        if: (startsWith(matrix.cfg.os, 'macos') || startsWith(matrix.cfg.os, 'ubuntu')) && matrix.cfg.doc == 1
        run: |
          grep -v -E '^\s*(#.*)$' scripts/tex-packages.txt | xargs sudo tlmgr install

      - name: Install dependencies for documentation (Windows)
        if: startsWith(matrix.cfg.os, 'windows') && matrix.cfg.doc == 1
        shell: pwsh
        run: |
          choco install -y --no-progress graphviz.portable
          # Update PATH
          echo "C:/Program Files/doxygen/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Configure CMake
        run: cmake -S .  -B build -DENABLE_DOC=${{ matrix.cfg.doc }}

      - name: Build
        run: cmake --build build
